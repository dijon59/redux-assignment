{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/dijon/Desktop/ReactCourse/redux--assignment-2-problem/src/containers/Persons.js\";\nimport React, { Component } from 'react';\nimport Person from '../components/Person/Person';\nimport AddPerson from '../components/AddPerson/AddPerson';\nimport { connect } from 'react-redux';\nimport * as actionTypes from '../store/actions';\n\nclass Persons extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.personAddedHandler = () => {\n      const newPerson = {\n        id: Math.random(),\n        // not really unique but good enough here!\n        name: 'Max',\n        age: Math.floor(Math.random() * 40)\n      };\n      this.setState(prevState => {\n        return {\n          persons: prevState.persons.concat(newPerson)\n        };\n      });\n    };\n\n    this.personDeletedHandler = personId => {\n      this.setState(prevState => {\n        return {\n          persons: prevState.persons.filter(person => person.id !== personId)\n        };\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AddPerson, {\n        personAdded: this.props.onPersonAdded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), this.state.persons.map(person => /*#__PURE__*/_jsxDEV(Person, {\n        name: person.name,\n        age: person.age,\n        clicked: () => this.personDeletedHandler(person.id)\n      }, person.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    persons: state.persons\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onPersonAdded: () => dispatch({\n      type: actionTypes.ADDED_PERSON,\n      payload: {\n        id: Math.random(),\n        name: 'Max',\n        age: Math.floor(Math.random() * 40)\n      }\n    }),\n    onPersonDeleted: id => dispatch({\n      type: actionTypes.DELETED_PERSON,\n      personId: id\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Persons);","map":{"version":3,"sources":["/Users/dijon/Desktop/ReactCourse/redux--assignment-2-problem/src/containers/Persons.js"],"names":["React","Component","Person","AddPerson","connect","actionTypes","Persons","personAddedHandler","newPerson","id","Math","random","name","age","floor","setState","prevState","persons","concat","personDeletedHandler","personId","filter","person","render","props","onPersonAdded","state","map","mapStateToProps","mapDispatchToProps","dispatch","type","ADDED_PERSON","payload","onPersonDeleted","DELETED_PERSON"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,WAAZ,MAA6B,kBAA7B;;AAEA,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AAAA;AAAA;;AAAA,SAE5BM,kBAF4B,GAEP,MAAM;AACvB,YAAMC,SAAS,GAAG;AACdC,QAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,EADU;AACK;AACnBC,QAAAA,IAAI,EAAE,KAFQ;AAGdC,QAAAA,GAAG,EAAEH,IAAI,CAACI,KAAL,CAAYJ,IAAI,CAACC,MAAL,KAAgB,EAA5B;AAHS,OAAlB;AAKA,WAAKI,QAAL,CAAiBC,SAAF,IAAiB;AAC5B,eAAO;AAAEC,UAAAA,OAAO,EAAED,SAAS,CAACC,OAAV,CAAkBC,MAAlB,CAAyBV,SAAzB;AAAX,SAAP;AACH,OAFD;AAGH,KAX2B;;AAAA,SAa5BW,oBAb4B,GAaJC,QAAD,IAAc;AACjC,WAAKL,QAAL,CAAiBC,SAAF,IAAiB;AAC5B,eAAO;AAAEC,UAAAA,OAAO,EAAED,SAAS,CAACC,OAAV,CAAkBI,MAAlB,CAAyBC,MAAM,IAAIA,MAAM,CAACb,EAAP,KAAcW,QAAjD;AAAX,SAAP;AACH,OAFD;AAGH,KAjB2B;AAAA;;AAmB5BG,EAAAA,MAAM,GAAI;AACN,wBACI;AAAA,8BACI,QAAC,SAAD;AAAW,QAAA,WAAW,EAAE,KAAKC,KAAL,CAAWC;AAAnC;AAAA;AAAA;AAAA;AAAA,cADJ,EAEK,KAAKC,KAAL,CAAWT,OAAX,CAAmBU,GAAnB,CAAuBL,MAAM,iBAC1B,QAAC,MAAD;AAEI,QAAA,IAAI,EAAEA,MAAM,CAACV,IAFjB;AAGI,QAAA,GAAG,EAAEU,MAAM,CAACT,GAHhB;AAII,QAAA,OAAO,EAAE,MAAM,KAAKM,oBAAL,CAA0BG,MAAM,CAACb,EAAjC;AAJnB,SACSa,MAAM,CAACb,EADhB;AAAA;AAAA;AAAA;AAAA,cADH,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AAhC2B;;AAkChC,MAAMmB,eAAe,GAAGF,KAAK,IAAI;AAC7B,SAAO;AACHT,IAAAA,OAAO,EAAES,KAAK,CAACT;AADZ,GAAP;AAGH,CAJD;;AAMA,MAAMY,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHL,IAAAA,aAAa,EAAE,MAAMK,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE1B,WAAW,CAAC2B,YAAnB;AACCC,MAAAA,OAAO,EAAE;AAACxB,QAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,EAAL;AACCC,QAAAA,IAAI,EAAE,KADP;AAECC,QAAAA,GAAG,EAAEH,IAAI,CAACI,KAAL,CAAYJ,IAAI,CAACC,MAAL,KAAgB,EAA5B;AAFN;AADV,KAAD,CAD1B;AAKHuB,IAAAA,eAAe,EAAGzB,EAAD,IAAQqB,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE1B,WAAW,CAAC8B,cAAnB;AAAmCf,MAAAA,QAAQ,EAAEX;AAA7C,KAAD;AAL9B,GAAP;AAOH,CARD;;AAUA,eAAeL,OAAO,CAACwB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CvB,OAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport Person from '../components/Person/Person';\nimport AddPerson from '../components/AddPerson/AddPerson';\nimport { connect } from 'react-redux';\nimport * as actionTypes from '../store/actions'\n\nclass Persons extends Component {\n\n    personAddedHandler = () => {\n        const newPerson = {\n            id: Math.random(), // not really unique but good enough here!\n            name: 'Max',\n            age: Math.floor( Math.random() * 40 )\n        }\n        this.setState( ( prevState ) => {\n            return { persons: prevState.persons.concat(newPerson)}\n        } );\n    }\n\n    personDeletedHandler = (personId) => {\n        this.setState( ( prevState ) => {\n            return { persons: prevState.persons.filter(person => person.id !== personId)}\n        } );\n    }\n\n    render () {\n        return (\n            <div>\n                <AddPerson personAdded={this.props.onPersonAdded} />\n                {this.state.persons.map(person => (\n                    <Person \n                        key={person.id}\n                        name={person.name} \n                        age={person.age} \n                        clicked={() => this.personDeletedHandler(person.id)}/>\n                ))}\n            </div>\n        );\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        persons: state.persons\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onPersonAdded: () => dispatch({type: actionTypes.ADDED_PERSON,\n                                       payload: {id: Math.random(),\n                                                 name: 'Max',\n                                                 age: Math.floor( Math.random() * 40 )}}),\n        onPersonDeleted: (id) => dispatch({type: actionTypes.DELETED_PERSON, personId: id})\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Persons);\n"]},"metadata":{},"sourceType":"module"}