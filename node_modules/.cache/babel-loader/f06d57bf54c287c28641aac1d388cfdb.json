{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/dijon/Desktop/ReactCourse/redux--assignment-2-problem/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { createStore } from \"redux\";\nimport reducer from \"./store/reducer\";\nimport { Provider } from 'react-redux';\nconst store = createStore(reducer);\nReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 41\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 17\n}, this), document.getElementById('root'));\nregisterServiceWorker();","map":{"version":3,"sources":["/Users/dijon/Desktop/ReactCourse/redux--assignment-2-problem/src/index.js"],"names":["React","ReactDOM","App","registerServiceWorker","createStore","reducer","Provider","store","render","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,SAAQC,WAAR,QAA0B,OAA1B;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,MAAMC,KAAK,GAAGH,WAAW,CAACC,OAAD,CAAzB;AAEAJ,QAAQ,CAACO,MAAT,eAAgB,QAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA,yBAAwB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAxB;AAAA;AAAA;AAAA;AAAA,QAAhB,EAA4DE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA5D;AACAP,qBAAqB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport {createStore} from \"redux\";\nimport reducer from \"./store/reducer\";\nimport { Provider } from 'react-redux';\n\nconst store = createStore(reducer)\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\nregisterServiceWorker();\n"]},"metadata":{},"sourceType":"module"}